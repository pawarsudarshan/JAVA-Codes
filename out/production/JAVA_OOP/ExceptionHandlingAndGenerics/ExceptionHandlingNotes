In Java, an exception is an event that disrupts the normal flow of the program.
It is an object which is thrown at runtime.

The core advantage of exception handling is to maintain the normal flow of the application.
An exception normally disrupts the normal flow of the application;
that is why we need to handle exceptions.

The java.lang.Throwable class is the root class of Java Exception hierarchy inherited by two subclasses: Exception and Error.

There are two types of exceptions
1. Checked - these are checked at compile time. For example - IOException, SQLException
2. Unchecked - these are not checked at compile time but they are checked at Runtime.
For example, ArithmeticException, NullPointerException, ArrayIndexOutOfBoundsException, etc.

Keywords in Exception Handling:

try	    The "try" keyword is used to specify a block where we should place an exception code. It means we can't use try block alone. The try block must be followed by either catch or finally.

catch	The "catch" block is used to handle the exception. It must be preceded by try block which means we can't use catch block alone. It can be followed by finally block later.

finally	The "finally" block is used to execute the necessary code of the program. It is executed whether an exception is handled or not.

throw	The "throw" keyword is used to throw an exception.

throws	The "throws" keyword is used to declare exceptions. It specifies that there may occur an exception in the method. It doesn't throw an exception. It is always used with method signature.

Multiple Exceptions (ArithmeticException and IndexoutOfBound Exception)

1. Combination of two Exception using the | operator is allowed in Java.
2. As soon as the first exception occurs it gets thrown at catch block.
3. Check of expression is done by precedence compiler check rule from right to left of the expression.

The exception at right hand side is thrown first because while assigning value compiler from right to left of the expression.
for example, arr[10] = a/b; checks from right to left.

While executing the if block compiler checks from left to right.
for example, if(arr[10]==a/b) checks form left to right

Object Cloning:
clone is a method in the object class that can be used to make copies of an object.
Cloneable is an interface in java.lang package and it is used for object cloning.
We have to implement Cloneable inorder to clone an object.

We then just override the clone method from the Object class

public Object clone() throws CloneNotSupportedException{
        return super.clone();
    }

If something inside the method throws an exception then we have to also explicitly declare
that this method can also throw an exception.

Shallow copy:
For primitives it creates new variables but for non-primitives (objects) it does not create new objects but
reference variable will points to the old object (from which copy is generated).

How to print array in java: use Arrays.toString() method and pass in array name
System.out.println(Arrays.toString(arr));










































